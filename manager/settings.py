"""
Django settings for manager project.

Generated by 'django-admin startproject' using Django 3.0.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
from subprocess import check_output

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'b4ns!4$%k2w%h=a&p+w6*a4(t_rkna4ax8^s66vzxtrr&b!lb#'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

DEFAULT_AUTO_FIELD='django.db.models.AutoField'

SESSION_COOKIE_SECURE=True
CSRF_COOKIE_SECURE=True

ALLOWED_HOSTS = []

# Email
SENDGRID_API_KEY = os.getenv('SENDGRID_API_KEY')

EMAIL_HOST = 'smtp.sendgrid.net'
EMAIL_HOST_USER = 'apikey'
EMAIL_HOST_PASSWORD = SENDGRID_API_KEY
EMAIL_PORT = 587
EMAIL_USE_TLS = True

DEFAULT_FROM_EMAIL  = 'mafaldo@hotmail.it'
SERVER_EMAIL    = 'mafaldo@hotmail.it'

VERSION = ""
with open("version.txt", 'r') as f:
    VERSION = f.read()

BRANCH = check_output(["git", "rev-parse", "--abbrev-ref", "HEAD"]).decode()
COMMIT_ID = check_output(["git", "rev-parse", "HEAD"]).decode()

OAUTH_ENABLED = True

# Application definition

INSTALLED_APPS = [
    'server.apps.ServerConfig',
    'accounts.apps.AccountsConfig',
    'client.apps.ClientConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'impersonate',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'impersonate.middleware.ImpersonateMiddleware',
]

AUTHLIB_OAUTH_CLIENTS = {
   'hitobito': {
        'client_id': 't5yYztJorDVXRE7PgPy7AttzarwTFW8faPrm56wsbSg',
        'client_secret': 'hgpsKjMGymVsi-dAeOFMWv2V2IpIbdILZJ1SIOT5cSA',
        'access_token_url': 'https://pbs.puzzle.ch/oauth/token',
        'access_token_params': None,
        'refresh_token_url': None,
        'authorize_url': 'https://pbs.puzzle.ch/oauth/authorize',
        'authorize_params': None,
        'api_url': "https://pbs.puzzle.ch/oauth/profile",
        'client_kwargs': {"grant_type": "authorization_code", "scope": "with_roles"},
    }
}

if DEBUG:
    INSTALLED_APPS.append('debug_toolbar')
    MIDDLEWARE.append('debug_toolbar.middleware.DebugToolbarMiddleware')
    INTERNAL_IPS = [
        '127.0.0.1',
    ]

ROOT_URLCONF = 'manager.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'manager.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'it-ch'

TIME_ZONE = 'Europe/Zurich'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static")
]
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'

FQD_BASE_URL = 'http://127.0.0.1:8000'

# Impersonate settings
REQUIRE_SUPERUSER = True
ALLOW_SUPERUSER = False